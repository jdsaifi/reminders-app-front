{"version":3,"sources":["redux/reducers/auth.reducer.js","redux/reducers/user.reducer.js","redux/reducers/reminders.reducer.js","redux/reducers/index.js","redux/store.js","utils/utils.js","components/header/menu.component.jsx","components/not-found/not-found.component.jsx","utils/APIHelper.js","redux/actions/auth.action.js","components/login/login.component.jsx","components/login/logout.component.jsx","redux/actions/users.action.js","components/profile/profile-card.component.jsx","components/profile/profile-glance.component.jsx","components/profile/profile.component.jsx","components/profile/user-profile.component.jsx","components/reminders/reminder-card.component.jsx","components/home/home-page.component.jsx","redux/actions/reminders.action.js","components/reminders/set-reminder.component.jsx","components/search/user-search-card.component.jsx","components/search/users-search.component.jsx","App.js","serviceWorker.js","index.js"],"names":["_state","isAuthorized","user","profile","users","userSearchMeta","list","combineReducers","auth","state","type","payload","reminders","middleware","thunk","logger","store","createStore","reducers","applyMiddleware","isAccessToken","token","sessionStorage","getItem","BASE_URL","HeaderMenu","props","onChange","e","setState","target","name","value","searchHandler","a","console","log","preventDefault","history","push","search","this","Navbar","bg","variant","expand","Container","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","Form","inline","FormControl","placeholder","Button","onClick","React","Component","withRouter","connect","NotFound","axios","create","baseURL","responseType","actionAuthorize","dispatch","accessToken","API","get","headers","data","status","Login","signin","res","provider","email","username","split","auth_provider","auth_provider_id","auth_provider_access_token","display_name","dp","first_name","last_name","w3","U3","profileObj","googleId","imageUrl","givenName","familyName","loginErrorMsg","msg","closeErrorAlert","Alert","key","onClose","dismissible","appId","fields","callback","cssClass","clientId","buttonText","onSuccess","onFailure","post","socialLoginResponse","setItem","access_token","c","response","api_status","actionSocialSignIn","authorize","Logout","removeItem","actionMe","ProfileCard","isOwner","Card","style","Body","alt","src","minHeight","monthNames","ProfileGlance","createdAt","friendsCount","Date","getMonth","getUTCFullYear","Intl","NumberFormat","maximumSignificantDigits","format","Profile","meProfile","_","isEmpty","UserProfile","usersProfile","params","match","actionUser","ReminderCard","remind_me","remind_on","width","moment","HomePage","changeReminderPage","page","loadReminders","reminders_meta","meta","apiMsg","current_page","has_next","items_count","pages_count","map","reminder","_id","owner","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","itemClass","innerClass","linkClass","actionReminders","SetReminder","saveReminder","setReminder","enabled","date","time","friends","setReminderData","showSuccessAlert","showErrorAlert","closeSuccessAlert","Header","Control","Group","controlId","Label","as","Footer","reminder_data","UserSearchCard","to","UserSearch","changeUserSearchPage","searchUser","query","search_users_meta","prevProps","prevState","thisMatch","prevMatch","q","loadSelf","actionSearchUser","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54363c5f.chunk.js","sourcesContent":["\r\nconst _state = {\r\n    isAuthorized: false,\r\n    user: {}\r\n};\r\n\r\nexport default (state = _state, { type, payload }) => {\r\n    switch(type){\r\n        case 'auth':\r\n            return {...state, ...payload}\r\n        case 'me':\r\n            return {...state, user: {...payload} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","\r\nconst _state = {\r\n    profile: {},\r\n    users: [],\r\n    userSearchMeta: {}\r\n};\r\n\r\nexport default (state = _state, { type, payload }) => {\r\n    switch(type){\r\n        case 'user_profile':\r\n            return {...state, profile: { ...payload } }\r\n        case 'search_user':\r\n            return {...state, ...payload}\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nconst _state = {\r\n    list: []\r\n};\r\n\r\nexport default (state = _state, { type, payload }) => {\r\n    switch(type){\r\n        case 'load_reminders':\r\n            return {...state, list: [ ...payload ] }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport authReducer from './auth.reducer';\r\nimport userReducer from './user.reducer';\r\nimport remindersReducer from './reminders.reducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    users: userReducer,\r\n    reminders: remindersReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport reducers from './reducers';\r\n\r\nconst middleware = [thunk, logger];\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;","export const isAccessToken = () => {\r\n    const token = sessionStorage.getItem('reminderapp::access_token');\r\n\r\n    if(token === null){\r\n        return false;\r\n    }else{\r\n        return token\r\n    }\r\n}\r\n\r\nexport const BASE_URL = '/';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router\";\r\n\r\n// Bootstrap\r\nimport Container from 'react-bootstrap/Container';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { BASE_URL } from '../../utils/utils';\r\n\r\nclass HeaderMenu extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            search: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        console.log(\"props\", this.props);\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    searchHandler = async (e) => {\r\n        console.log(\"search handler called\");\r\n        e.preventDefault();\r\n        const { history } = this.props;\r\n        history.push(`${BASE_URL}search/${this.state.search}`);\r\n    }\r\n\r\n    render(){\r\n        const { isAuthorized } = this.props;\r\n        const { search } = this.state;\r\n        return (\r\n            <Navbar bg=\"info\" variant=\"dark\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href={`${BASE_URL}`} className=\"nav-link\">HOME</Nav.Link>\r\n                            <Nav.Link href={`${BASE_URL}me`} className=\"nav-link\">PROFILE</Nav.Link>\r\n                            <Nav.Link href={`${BASE_URL}set-reminder`} className=\"nav-link\">SET REMINDER</Nav.Link>\r\n                        </Nav>\r\n\r\n                        {\r\n                            isAuthorized === false ? '' \r\n                            : \r\n                            <Form inline>\r\n                                <FormControl type=\"text\" placeholder=\"Search\" \r\n                                className=\"mr-sm-2\" name=\"search\" value={search} onChange={this.onChange} />\r\n                                <Button type=\"submit\" variant=\"outline-light\" onClick={this.searchHandler}>Search</Button>\r\n                            </Form>\r\n                        }\r\n\r\n                        <Nav>\r\n                            { \r\n                                isAuthorized === false ? \r\n                                <Nav.Link href={`${BASE_URL}login`} className=\"nav-link\">LOGIN</Nav.Link>\r\n                                :<Nav.Link href={`${BASE_URL}logout`} className=\"nav-link\">LOGOUT</Nav.Link>\r\n                            }\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthorized: state.auth.isAuthorized,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(HeaderMenu));","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"text-center col-md mt-5\">\r\n            <h1 className=\"display-3\">404</h1>\r\n            <h5>Page not found.</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  // baseURL: \"http://localhost:3001/api/v1\",\r\n  baseURL: \"https://reminders-app-backend.herokuapp.com/api/v1\",\r\n  responseType: \"json\"\r\n});","import API from '../../utils/APIHelper';\r\n\r\nexport const actionSocialSignIn = data => {\r\n    return async dispatch => {\r\n        try{\r\n            const socialLoginResponse = await API.post(`/social-signin`, data);\r\n            if(socialLoginResponse.status === 201){\r\n                const { data: { data } } = socialLoginResponse;\r\n\r\n                // Save JWT Access Token\r\n                sessionStorage.setItem('reminderapp::access_token', data.access_token);\r\n                \r\n                dispatch({\r\n                    type: 'auth',\r\n                    payload: {...data, isAuthorized: true}\r\n                });\r\n\r\n                return { c: 10001, status: true, msg: 'Success' }\r\n            }else{\r\n                return { c: 10002, status: false, msg: 'Something went wrong.' }\r\n            }\r\n            \r\n        }catch(error){\r\n            const { response } = error;\r\n            if(response){\r\n                const { status, data } = response;\r\n                switch(status){\r\n                    case 422:\r\n                        return { c: 10003, status: false, api_status: 422, msg: data.msg, data: data.data }\r\n                    case 409:\r\n                        return { c: 10004, status: false, api_status: 409, msg: data.msg, data: data.data }\r\n                    default:\r\n                        return { c: 10005, status: false, api_status: 500, msg: data.msg, data: data.data }\r\n                }                \r\n            }else{\r\n                // something is wrong\r\n                return { c: 10006, status: false, api_status: 500, msg: 'Something went wrong.' }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const actionAuthorize = () => {\r\n    return async dispatch => {\r\n        try{\r\n            const accessToken = sessionStorage.getItem('reminderapp::access_token');\r\n            const { data } = await API.get('/authorize', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${accessToken}`\r\n                }\r\n            });\r\n            if(data.status === 'okay'){\r\n                dispatch({\r\n                    type: 'auth',\r\n                    payload: { isAuthorized: true }\r\n                });\r\n                return true;\r\n            }else{\r\n                dispatch({\r\n                    type: 'auth',\r\n                    payload: { isAuthorized: false }\r\n                });\r\n                return false;\r\n            }\r\n        }catch(error){\r\n            return false;\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\n// Bootstrap\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nimport { isAccessToken, BASE_URL } from '../../utils/utils';\r\nimport { actionSocialSignIn, actionAuthorize } from '../../redux/actions/auth.action';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            loginErrorMsg: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const { history } = this.props;\r\n\r\n        // Is access_token exists\r\n        if(isAccessToken()){\r\n            history.push(`${BASE_URL}`);\r\n        }\r\n        \r\n    }\r\n\r\n    signin = async (res, provider) => {\r\n        let data;\r\n        console.log(\"provider: \", provider);\r\n        console.log(\"res: \", res);\r\n\r\n        if(provider === 'facebook' && res.email){\r\n            let username = res.email.split('@')[0];\r\n            data = {\r\n                auth_provider: 'facebook',\r\n                auth_provider_id: res.id,\r\n                auth_provider_access_token: res.accessToken,\r\n                username: username,\r\n                email: res.email,\r\n                display_name: res.name,\r\n                dp: `https://graph.facebook.com/${res.id}/picture?type=large`,\r\n                first_name: res.first_name || \"\",\r\n                last_name: res.last_name || \"\"\r\n            }\r\n        }\r\n\r\n        if(provider === 'google' && res.w3.U3){\r\n            let username = res.profileObj.email.split('@')[0];\r\n            data = {\r\n                auth_provider: 'google',\r\n                auth_provider_id: res.profileObj.googleId,\r\n                auth_provider_access_token: res.accessToken,\r\n                username: username,\r\n                email: res.profileObj.email,\r\n                display_name: res.profileObj.name,\r\n                dp: res.profileObj.imageUrl,\r\n                first_name: res.profileObj.givenName || \"\",\r\n                last_name: res.profileObj.familyName || \"\"\r\n            }\r\n        }\r\n\r\n\r\n\r\n        if(data){\r\n            const res = await this.props.signin(data);\r\n            console.log(\"social login res: \", res);\r\n            if(res.status === false){\r\n                this.setState({ loginErrorMsg: res.msg });\r\n            }\r\n\r\n            if(res.status === true){\r\n                this.setState({ loginErrorMsg: '' });\r\n                const { history } = this.props;\r\n                // Redirect user to Profile(/me) page\r\n                history.push(`${BASE_URL}me`);\r\n            }\r\n        }else{\r\n            this.setState({ loginErrorMsg: 'Something went wrong. Please try later.' });\r\n        }\r\n    }\r\n\r\n    closeErrorAlert = () => {\r\n        this.setState({ loginErrorMsg: '' });\r\n    }\r\n\r\n    render(){\r\n        const { loginErrorMsg } = this.state;\r\n\r\n        return(\r\n            <section className=\"container\">\r\n                <h2 className=\"text-center\">Welcome to Remind.me</h2>\r\n                <hr />\r\n\r\n                {\r\n                    loginErrorMsg !== '' ? \r\n                    <Alert key={1} variant='danger' onClose={() => this.closeErrorAlert()} dismissible>\r\n                        <strong>Error! </strong>{loginErrorMsg}\r\n                    </Alert>\r\n                    : ''\r\n                }\r\n\r\n                <article className=\"jumbotron\">\r\n                    <p className=\"text-center lead\">\r\n                        <strong>\r\n                            Ready to begin? Signin to set reminder and collaborate with your friends and colleagues!\r\n                        </strong>\r\n                    </p>\r\n\r\n                    <div className=\"text-center\">\r\n                        <FacebookLogin\r\n                            appId=\"860969304305165\" //APP ID NOT CREATED YET\r\n                            fields=\"name,email,picture,first_name,last_name\"\r\n                            callback={res => this.signin(res, 'facebook')}\r\n                            cssClass=\"loginBtn loginBtn--facebook mr-4\"\r\n                        />\r\n\r\n                        <GoogleLogin\r\n                                clientId=\"604433154038-357srq78dgd0jiji0fs7s8rme0k5uu0u.apps.googleusercontent.com\" //CLIENTID NOT CREATED YET\r\n                                buttonText=\"LOGIN WITH GOOGLE\"\r\n                                onSuccess={res => this.signin(res, 'google')}\r\n                                onFailure={res => this.signin(res, 'google')}\r\n                            />\r\n                    </div>\r\n                    \r\n                </article>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signin: data => dispatch(actionSocialSignIn(data)),\r\n        authorize: () => dispatch(actionAuthorize())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\r\n\r\nimport { isAccessToken, BASE_URL } from '../../utils/utils';\r\n\r\nclass Logout extends React.Component{\r\n    async componentDidMount(){\r\n        const { history } = this.props;\r\n\r\n        if(!isAccessToken()){\r\n            history.push(`${BASE_URL}/login`);\r\n        }\r\n\r\n        // Remove access token\r\n        sessionStorage.removeItem('reminderapp::access_token');\r\n        history.push(`${BASE_URL}/login`);\r\n    }\r\n}\r\n\r\nexport default Logout;","import API from '../../utils/APIHelper';\r\n\r\nexport const actionMe = () => {\r\n    return async dispatch => {\r\n        try{\r\n            const accessToken = sessionStorage.getItem('reminderapp::access_token');\r\n            const { data: { status, data } } = await API.get('/users/me', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${accessToken}`\r\n                }\r\n            });\r\n\r\n            if(status === 'okay'){\r\n                dispatch({\r\n                    type: 'me',\r\n                    payload: data\r\n                });\r\n                return {status: true, msg:'Profile'}\r\n            }else{\r\n                return {status: false, msg:'Something went wrong.'}\r\n            }\r\n\r\n        }catch(error){\r\n            const { response } = error;\r\n            if(response){\r\n                const { data } = response;\r\n                return { status: false, msg: data.msg, data: data.data }\r\n            }else{\r\n                // something is wrong\r\n                return {status: false, msg:'Something went wrong.'}\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const actionUser = username => {\r\n    return async dispatch => {\r\n        try{\r\n            const accessToken = sessionStorage.getItem('reminderapp::access_token');\r\n            const { status, data: { status: api_status, data } } = await API.get(`/users/${username}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${accessToken}`\r\n                }\r\n            });\r\n            \r\n            if(status === 200 && api_status === 'okay'){\r\n                dispatch({\r\n                    type: 'user_profile',\r\n                    payload: data\r\n                });\r\n\r\n                return {status: true, msg:`${username}'s Profile`}\r\n            }else{\r\n                return {status: false, msg:'Something went wrong.'}\r\n            }\r\n        }catch(error){\r\n            const { response } = error;\r\n            if(response){\r\n                const { status, data } = response;\r\n                if(status === 404 ){\r\n                    return { status: false, api_status: 404, msg: data.msg, data: data.data }\r\n                }\r\n                \r\n            }else{\r\n                // something is wrong\r\n                return {status: false, msg:'Something went wrong.'}\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const actionSearchUser = (q, page) => {\r\n    console.log(\"actionsearch user q: \", q)\r\n    console.log(\"actionsearch user page: \", page)\r\n    return async dispatch => {\r\n        try{            \r\n            const accessToken = sessionStorage.getItem('reminderapp::access_token');\r\n            const { status, data: { status: api_status, data, meta } } = await API.get(`/search?q=${q}&page=${page}&limit=24`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${accessToken}`\r\n                }\r\n            });\r\n            \r\n            if(status === 200 && api_status === 'okay'){\r\n                dispatch({\r\n                    type: 'search_user',\r\n                    payload: {\r\n                        users: data,\r\n                        userSearchMeta: meta\r\n                    }\r\n                });\r\n\r\n                return {status: true, msg:`Search result`, meta}\r\n            }else{\r\n                return {status: false, msg:'Something went wrong.'}\r\n            }\r\n        }catch(error){\r\n            const { response } = error;\r\n            if(response){\r\n                const { status, data } = response;\r\n                if(status === 404 ){\r\n                    return { status: false, api_status: 404, msg: data.msg, data: data.data }\r\n                }\r\n                \r\n            }else{\r\n                // something is wrong\r\n                return {status: false, msg:'Something went wrong.'}\r\n            }\r\n        }\r\n\r\n    }\r\n}","import React from 'react';\r\n\r\n// Bootstrap\r\nimport Card from 'react-bootstrap/Card'\r\n\r\n// alt-src=\"https://avatars.dicebear.com/v2/avataaars/xxd.svg\"\r\nexport const ProfileCard = ({ dp, display_name, email, isOwner }) => (\r\n    <Card style={{}} className=\"mx-auto mt-0 p-2\">\r\n        <Card.Body className=\"text-center\">\r\n            <img \r\n                alt=\"Profile\" \r\n                src={dp}\r\n                className=\"rounded-circle img-thumbnail w-75 mx-auto text-center\"\r\n                style={{ minHeight: \"220px\"}} />\r\n\r\n            <p className=\"lead mb-0\">{display_name}</p>\r\n            <p className=\"text-muted\">{email}</p>\r\n\r\n            { isOwner ? <div className=\"text-right mb-0\"><a href=\"/edit\">Edit Profile</a></div> : null }\r\n            \r\n        </Card.Body>\r\n    </Card>\r\n)","import React from 'react';\r\n\r\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\nexport const ProfileGlance = ({ createdAt, friendsCount=0 }) => (\r\n    <section className=\"row br1\">\r\n        <div className=\"col-md-12 h3 font-weight-light mb-3 pb-2\">\r\n            Profile at a Glance\r\n            <hr />\r\n        </div>\r\n        <div className=\"col-md lead\">\r\n            Member Since: \r\n            <strong> { `${monthNames[new Date(createdAt).getMonth()]} ${new Date(createdAt).getUTCFullYear()}` }</strong>\r\n        </div>\r\n        <div className=\"col-md lead\">\r\n            Friends: <strong>{new Intl.NumberFormat('en-IN', { maximumSignificantDigits: 3 }).format(friendsCount)}</strong>\r\n        </div>\r\n    </section>\r\n);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\n\r\nimport { isAccessToken, BASE_URL } from '../../utils/utils';\r\n\r\nimport { actionAuthorize } from '../../redux/actions/auth.action';\r\nimport { actionMe } from '../../redux/actions/users.action';\r\n\r\n/** Import Component */\r\nimport { ProfileCard } from './profile-card.component';\r\nimport { ProfileGlance } from './profile-glance.component';\r\n\r\nclass Profile extends React.Component {\r\n\r\n    async componentDidMount(){\r\n        const { history, authorize, meProfile } = this.props;\r\n        \r\n        // Is access_token exists\r\n        if(!isAccessToken()){\r\n            history.push(`${BASE_URL}login`);\r\n        }\r\n\r\n        if(await authorize()){\r\n            await meProfile();\r\n        }else{\r\n            history.push(`${BASE_URL}login`);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props;\r\n        if(_.isEmpty(user)) return (<p className=\"mt-4 text-center\"><i className=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\r\n        <span className=\"sr-only\">Loading...</span></p>);\r\n        return (\r\n            <section className=\"container\">\r\n                <div className=\"row mt-5 br1\">\r\n                    <article className=\"col-md-4 col-sm-6 text-cetner bb1\">\r\n                        <ProfileCard {...user} isOwner={true} />\r\n                    </article>\r\n                    <article className=\"col-md bg1\">\r\n                        <ProfileGlance {...user} />\r\n                    </article>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.auth.user\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authorize: () => dispatch(actionAuthorize()),\r\n        meProfile: () => dispatch(actionMe())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\n\r\nimport { isAccessToken, BASE_URL } from '../../utils/utils';\r\n\r\nimport { actionAuthorize } from '../../redux/actions/auth.action';\r\nimport { actionUser } from '../../redux/actions/users.action';\r\n\r\n/** Import Component */\r\nimport { ProfileCard } from './profile-card.component';\r\nimport { ProfileGlance } from './profile-glance.component';\r\n\r\nclass UserProfile extends React.Component {\r\n\r\n    async componentDidMount(){\r\n        const { history, authorize, usersProfile, match: { params } } = this.props;\r\n        \r\n        // Is access_token exists\r\n        if(!isAccessToken()){\r\n            history.push(`${BASE_URL}login`);\r\n        }\r\n\r\n        if(await authorize()){\r\n            const resUserProfile = await usersProfile(params.username || \"\");\r\n            if(!resUserProfile.status){\r\n                // To-Do: show error message\r\n            }\r\n        }else{\r\n            history.push(`${BASE_URL}login`);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props;\r\n        \r\n        if(_.isEmpty(user)){\r\n            return (<h2 className=\"text-center\">Data Not Found.</h2>)\r\n        }else{\r\n            return (\r\n                <section className=\"container\">\r\n                    <div className=\"row mt-5 br1\">\r\n                        <article className=\"col-md-4 col-sm-6 text-cetner bb1\">\r\n                            <ProfileCard {...user} isOwner={false} />\r\n                        </article>\r\n                        <article className=\"col-md bg1\">\r\n                            <ProfileGlance {...user} />\r\n                        </article>\r\n                    </div>\r\n                </section>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.users.profile\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authorize: () => dispatch(actionAuthorize()),\r\n        usersProfile: username => dispatch(actionUser(username))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\n// Bootstrap\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nclass ReminderCard extends React.Component {\r\n    render(){\r\n        const { display_name, dp, remind_me, remind_on } = this.props;\r\n\r\n        return (\r\n            <section className=\"row mt-3\">\r\n                <article className=\"col-md\">\r\n                    <Card className=\"mt-0 p-3 reminder-card-boxshadow\">\r\n                        <div className=\"row\">\r\n                            <article className=\"col-md-2 text-center reminder-list-user-box\">\r\n                                {/* https://avatars.dicebear.com/v2/avataaars/xxd.svg */}\r\n                                <img src={dp} alt=\"Avatar\"\r\n                                style={{ width: \"75px\" }} />\r\n                                <p className=\"lead\">{display_name}</p>\r\n                            </article>\r\n\r\n                            <article className=\"col-md-10\">\r\n                                <p className=\"lead\"  style={{ minHeight:\"70px\" }}>{remind_me}</p>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md\">\r\n                                        <strong className=\"text-muted\">Will remind at </strong>\r\n                                        {moment(remind_on).format('LLLL')}\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </article>\r\n                        </div>\r\n                    </Card>\r\n                </article>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReminderCard;","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport { isAccessToken, BASE_URL } from '../../utils/utils';\r\nimport { actionAuthorize } from '../../redux/actions/auth.action';\r\nimport { actionReminders } from '../../redux/actions/reminders.action';\r\n\r\n// Components\r\nimport ReminderCard from '../reminders/reminder-card.component';\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n       \r\n        this.state = {\r\n            reminders_meta: {\r\n                current_page: 1,\r\n                has_next: null,\r\n                items_count: 0,\r\n                pages_count: 0\r\n            },\r\n            apiMsg: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const { history, authorize, loadReminders } = this.props;\r\n        \r\n        // Is access_token exists\r\n        if(!isAccessToken() || !await authorize()){\r\n            history.push(`${BASE_URL}/login`);\r\n        }\r\n\r\n        // load reminders\r\n        const res = await loadReminders(this.state.reminders_meta.current_page);\r\n        if(res.status === true){\r\n            this.setState({\r\n                reminders_meta: res.meta\r\n            });\r\n        }\r\n        if(res.api_status === 404){\r\n            this.setState({\r\n                apiMsg: res.msg\r\n            });\r\n        }\r\n    }\r\n\r\n    changeReminderPage = async page => { \r\n        const { loadReminders } = this.props;       \r\n        // load reminders\r\n        const res = await loadReminders(page);\r\n\r\n        if(res.status === true){\r\n            this.setState({\r\n                reminders_meta: res.meta\r\n            });\r\n        }\r\n        if(res.api_status === 404){\r\n            this.setState({\r\n                apiMsg: res.msg\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { reminders } = this.props;\r\n        const { apiMsg, reminders_meta: { current_page, items_count } } = this.state;\r\n        \r\n        if(apiMsg !== '') return (<h3 className=\"text-center lead mt-4\">{apiMsg}</h3>);\r\n\r\n        if(_.isEmpty(reminders)) return (<p className=\"mt-4 text-center\"><i className=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\r\n        <span className=\"sr-only\">Loading...</span></p>);\r\n        \r\n        return (\r\n            <section className=\"container\">\r\n                {\r\n                    reminders.map( reminder => {\r\n                        return <ReminderCard \r\n                        key={reminder._id} \r\n                        display_name={reminder.owner.display_name}\r\n                        dp={reminder.owner.dp}\r\n                        remind_me={reminder.remind_me} \r\n                        remind_on={reminder.remind_on} \r\n                        />\r\n                    })\r\n                }\r\n                <Pagination\r\n                    activePage={current_page}\r\n                    itemsCountPerPage={10}\r\n                    totalItemsCount={items_count}\r\n                    pageRangeDisplayed={7}\r\n                    onChange={this.changeReminderPage}\r\n                    itemClass=\"page-item\"\r\n                    innerClass=\"pagination mt-5 mb-5\"\r\n                    linkClass=\"page-link\"\r\n                />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    reminders: state.reminders.list\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authorize: () => dispatch(actionAuthorize()),\r\n        loadReminders: page => dispatch(actionReminders(page)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","import API from '../../utils/APIHelper';\r\n\r\nexport const actionReminders = page => {\r\n    return async dispatch => {\r\n        try{\r\n            const accessToken = sessionStorage.getItem('reminderapp::access_token');\r\n            const { status, data: { status: api_status, data, meta } } = await API.get(`/reminders?page=${page}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${accessToken}`\r\n                }\r\n            });\r\n            \r\n            if(status === 200 && api_status === 'okay'){\r\n                dispatch({\r\n                    type: 'load_reminders',\r\n                    payload: data\r\n                });\r\n\r\n                return {status: true, msg:`List of reminders`, meta}\r\n            }else{\r\n                return {status: false, msg:'Something went wrong.'}\r\n            }\r\n        }catch(error){\r\n            const { response } = error;\r\n            if(response){\r\n                const { status, data } = response;\r\n                if(status === 404 ){\r\n                    return { status: false, api_status: 404, msg: data.msg, data: data.data }\r\n                }\r\n                return {status: false, msg:'Something went wrong.'}\r\n            }else{\r\n                // something is wrong\r\n                return {status: false, msg:'Something went wrong.'}\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Set Reminder\r\n */\r\nexport const actionSetReminder = reminder_data => {\r\n    return async dispatch => {\r\n        try{\r\n            const accessToken = sessionStorage.getItem('reminderapp::access_token');\r\n            const { status, data: { status: api_status } } = await API.post(`/reminders`, reminder_data, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${accessToken}`\r\n                }\r\n            });\r\n\r\n            if(status === 201 && api_status === 'okay'){\r\n                dispatch({\r\n                    type: 'set_new_reminder_success'\r\n                });\r\n\r\n                return {status: true, msg:`Reminder has been set successfully.`}\r\n            }else{\r\n                return {status: false, msg:'Something went wrong.'}\r\n            }\r\n        }catch(error){\r\n            const { response } = error;\r\n            if(response){\r\n                const { data } = response;\r\n                return { status: false, api_status: data.status, msg: data.msg, data: data.data }\r\n            }else{\r\n                // something is wrong\r\n                return {status: false, msg:'Something went wrong.'}\r\n            }\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// Bootstrap\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { isAccessToken, BASE_URL } from '../../utils/utils';\r\nimport { actionAuthorize } from '../../redux/actions/auth.action';\r\nimport { actionSetReminder } from '../../redux/actions/reminders.action';\r\n\r\n\r\nclass SetReminder extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            showErrorAlert: false,\r\n            showSuccessAlert: false,\r\n            msg: '',\r\n\r\n            // form data\r\n            remind_me: '',\r\n            enabled:true,\r\n            date: 'today',\r\n            time: 'morning',\r\n            friends:''\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const { history, authorize } = this.props;\r\n        \r\n        // Is access_token exists\r\n        if(!isAccessToken() || !await authorize()){\r\n            history.push(`${BASE_URL}login`);\r\n        }\r\n    }\r\n\r\n    saveReminder = async () => {\r\n        const { setReminder } = this.props;\r\n        const { remind_me, enabled, date, time, friends } = this.state;\r\n        \r\n        let setReminderData = {remind_me, enabled, date, time, friends};\r\n\r\n        const res = await setReminder(setReminderData);\r\n\r\n        if(res.status === true){\r\n            this.setState({\r\n                showSuccessAlert: true,\r\n                msg: res.msg\r\n            });\r\n        }else{\r\n            this.setState({\r\n                showErrorAlert: true,\r\n                msg: res.msg\r\n            });\r\n        }\r\n    }\r\n\r\n    closeSuccessAlert = () => {\r\n        this.setState({\r\n            showSuccessAlert: false\r\n        });\r\n    }\r\n\r\n    closeErrorAlert = () => {\r\n        this.setState({\r\n            showErrorAlert: false\r\n        });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        /*\r\n          Because we named the inputs to match their\r\n          corresponding values in state, it's\r\n          super easy to update the state\r\n        */\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      }\r\n\r\n    render(){\r\n        const { showErrorAlert, showSuccessAlert, remind_me, date, time } = this.state;\r\n        return (\r\n            <Container className=\"mt-5\">\r\n                {\r\n                    showSuccessAlert ? \r\n                    <Alert key={1} variant='success' onClose={() => this.closeSuccessAlert()} dismissible>\r\n                        <strong>Success! </strong>{this.state.msg}\r\n                    </Alert>\r\n                    : ''\r\n                }\r\n\r\n                {\r\n                    showErrorAlert ? \r\n                    <Alert key={1} variant='danger' onClose={() => this.closeErrorAlert()} dismissible>\r\n                        <strong>Error! </strong>{this.state.msg}\r\n                    </Alert>\r\n                    : ''\r\n                }\r\n\r\n\r\n                <Form>\r\n                    <Card className=\"mx-auto w-50\">\r\n                    <Card.Header>Set a reminder</Card.Header>\r\n                    <Card.Body>\r\n                        <Form.Control type=\"text\" placeholder=\"Remind me...\" name=\"remind_me\" value={remind_me} onChange={this.onChange} />\r\n                        <hr />\r\n\r\n                        <section className=\"row\">\r\n                            <div className=\"col-md\">\r\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                    <Form.Label>Date</Form.Label>\r\n                                    <Form.Control as=\"select\" name=\"date\" onChange={this.onChange} value={date}>\r\n                                        <option value=\"today\">Today</option>\r\n                                        <option value=\"tomorrow\">tomorrow</option>\r\n                                        <option value=\"set\">Set date</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className=\"col-md\">\r\n                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                    <Form.Label>Time</Form.Label>\r\n                                    <Form.Control as=\"select\" name=\"time\" onChange={this.onChange} value={time}>\r\n                                        <option value=\"morning\">Morning</option>\r\n                                        <option value=\"afternoon\">Afternoon</option>\r\n                                        <option value=\"evening\">Evening</option>\r\n                                        <option value=\"night\">Night</option>\r\n                                        <option value=\"set_time\">Set time</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </div>\r\n                        </section>\r\n\r\n                    </Card.Body>\r\n\r\n                    <Card.Footer className=\"text-muted\">\r\n                        <Button variant=\"outline-dark\" onClick={this.saveReminder}>Save Reminder</Button>\r\n                    </Card.Footer>\r\n                    </Card>\r\n                </Form>          \r\n                \r\n            </Container>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authorize: () => dispatch(actionAuthorize()),\r\n        setReminder: data => dispatch(actionSetReminder(data))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SetReminder);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Bootstrap\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nimport { BASE_URL } from '../../utils/utils';\r\n\r\n\r\n                    \r\n\r\n// alt-src=\"https://avatars.dicebear.com/v2/avataaars/xxd.svg\"\r\nexport const UserSearchCard = ({ dp, display_name, email, username, isOwner }) => (\r\n    <section className=\"col-sm-12 col-md-4 col-lg-3\">\r\n        <Card style={{}} className=\"mx-auto mb-4 p-1\">\r\n            <Card.Body className=\"text-center\">\r\n                <img \r\n                    alt=\"Profile\" \r\n                    src={dp}\r\n                    className=\"rounded-circle img-thumbnail w-75 mx-auto text-center h-75\" />\r\n\r\n                <p className=\"lead mb-0\">{display_name}</p>\r\n                <p className=\"text-muted\">{email}</p>\r\n\r\n                <Link to={`${BASE_URL}users/${username}`}>View Profile</Link>\r\n            </Card.Body>\r\n        </Card>\r\n    </section>\r\n)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Pagination from \"react-js-pagination\";\r\nimport _ from 'lodash';\r\n\r\nimport { isAccessToken, BASE_URL } from '../../utils/utils';\r\nimport { actionAuthorize } from '../../redux/actions/auth.action';\r\nimport { actionMe, actionSearchUser } from '../../redux/actions/users.action';\r\nimport { UserSearchCard } from '../search/user-search-card.component';\r\n\r\n\r\n\r\nclass UserSearch extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            search_users_meta: {\r\n                current_page: 1,\r\n                has_next: null,\r\n                items_count: 0,\r\n                pages_count: 0,\r\n                query: ''\r\n            },\r\n            apiMsg: ''\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate(prevProps, prevState) {\r\n        const { history, authorize, match: thisMatch , searchUser } = this.props;\r\n        const { match: prevMatch } = prevProps;\r\n        const { current_page } = this.state;        \r\n\r\n        // Is access_token exists\r\n        if(!isAccessToken() || !await authorize()){\r\n            history.push(`${BASE_URL}login`);\r\n        }        \r\n        \r\n        if (prevMatch.params.q !== thisMatch.params.q) {\r\n            const res = await searchUser(thisMatch.params.q || '', current_page);\r\n            if(res.status === true){\r\n                this.setState({\r\n                    search_users_meta: res.meta,\r\n                    apiMsg: ''\r\n                });\r\n            }\r\n            if(res.api_status === 404){\r\n                this.setState({\r\n                    apiMsg: res.msg\r\n                });\r\n            }\r\n        }\r\n      }\r\n\r\n    async componentDidMount(){\r\n        const { history, authorize, match: { params }, loadSelf, searchUser } = this.props;\r\n        const { current_page } = this.state;\r\n        console.log(\"users search params: \", params)\r\n        \r\n        // Is access_token exists\r\n        if(!isAccessToken() || !await authorize()){\r\n            history.push(`${BASE_URL}login`);\r\n        }\r\n\r\n        // load self profile\r\n        await loadSelf();\r\n        \r\n        const res = await searchUser(params.q || '', current_page);\r\n\r\n        if(res.status === true){\r\n            this.setState({\r\n                search_users_meta: res.meta,\r\n                apiMsg: ''\r\n            });\r\n        }\r\n        if(res.api_status === 404){\r\n            this.setState({\r\n                apiMsg: res.msg\r\n            });\r\n        }\r\n    }\r\n\r\n    changeUserSearchPage = async page => { \r\n        const { searchUser } = this.props;       \r\n        const { search_users_meta: { query } } = this.state;       \r\n        // load reminders\r\n        const res = await searchUser(query, page);\r\n\r\n        if(res.status === true){\r\n            this.setState({\r\n                search_users_meta: res.meta,\r\n                apiMsg: ''\r\n            });\r\n        }\r\n        if(res.api_status === 404){\r\n            this.setState({\r\n                apiMsg: res.msg\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { users } = this.props;\r\n        const { apiMsg, search_users_meta: { current_page, items_count, pages_count }, search_users_meta } = this.state;\r\n\r\n        if(apiMsg !== '') return (<h3 className=\"text-center lead mt-4\">{apiMsg}</h3>);\r\n        \r\n        if(_.isEmpty(users)) return (<p className=\"mt-4 text-center\"><i className=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>\r\n        <span className=\"sr-only\">Loading...</span></p>);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 lead mt-4 mb-4\">\r\n                        Searching for: <strong>{search_users_meta.query}</strong>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    {users.map(user => {\r\n                        return <UserSearchCard key={user._id} {...user} />\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    {\r\n                        pages_count > 1 \r\n                        ? <Pagination\r\n                            activePage={current_page}\r\n                            itemsCountPerPage={10}\r\n                            totalItemsCount={items_count}\r\n                            pageRangeDisplayed={7}\r\n                            onChange={this.changeUserSearchPage}\r\n                            itemClass=\"page-item\"\r\n                            innerClass=\"pagination mt-5 mb-5\"\r\n                            linkClass=\"page-link\"\r\n                        /> : null\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    users: state.users.users,\r\n    user: state.auth.user,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authorize: () => dispatch(actionAuthorize()),\r\n        searchUser: (q, page) => dispatch(actionSearchUser(q, page)),\r\n        loadSelf: () => dispatch(actionMe())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserSearch)","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { Provider } from 'react-redux';\n\n// import GoogleLogin from 'react-google-login';\nimport store from './redux/store';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n/** Import Components */\nimport HeaderMenu from './components/header/menu.component';\nimport NotFound from './components/not-found/not-found.component';\nimport Login from './components/login/login.component';\nimport Logout from './components/login/logout.component';\nimport Profile from './components/profile/profile.component';\nimport UserProfile from './components/profile/user-profile.component';\nimport HomePage from './components/home/home-page.component';\nimport SetReminder from './components/reminders/set-reminder.component';\nimport UserSearch from './components/search/users-search.component';\nimport { BASE_URL } from './utils/utils'\n\n\nclass App extends React.Component {\n  \n  render(){\n    // console.log(`${window.location.origin.toString()}`);\n    return (\n      <Provider store={store}>\n        <Router>\n          <HeaderMenu />          \n          <Switch>\n            <Route exact path={`${BASE_URL}`} component={HomePage} />\n            <Route path={`${BASE_URL}login`} component={Login} />\n            <Route path={`${BASE_URL}me`} component={Profile} />\n            <Route exact path={`${BASE_URL}users/:username`} component={UserProfile} />\n            <Route path={`${BASE_URL}logout`} component={Logout} />\n            <Route path={`${BASE_URL}set-reminder`} component={SetReminder} />\n            <Route exact path={`${BASE_URL}search/:q`} component={UserSearch} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}